{"ast":null,"code":"/**\n * @module http-transport\n */\n'use strict';\n\nvar _objectSpread = require(\"/Users/hiromi/ionic-react-wordpress/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar agent = require('superagent');\n\nvar parseLinkHeader = require('li').parse;\n\nvar WPRequest = require('./constructors/wp-request');\n\nvar checkMethodSupport = require('./util/check-method-support');\n\nvar objectReduce = require('./util/object-reduce');\n\nvar isEmptyObject = require('./util/is-empty-object');\n/**\n * Set any provided headers on the outgoing request object. Runs after _auth.\n *\n * @method _setHeaders\n * @private\n * @param {Object} request A superagent request object\n * @param {Object} options A WPRequest _options object\n * @param {Object} A superagent request object, with any available headers set\n */\n\n\nfunction _setHeaders(request, options) {\n  // If there's no headers, do nothing\n  if (!options.headers) {\n    return request;\n  }\n\n  return objectReduce(options.headers, function (request, value, key) {\n    return request.set(key, value);\n  }, request);\n}\n/**\n * Conditionally set basic authentication on a server request object.\n *\n * @method _auth\n * @private\n * @param {Object} request A superagent request object\n * @param {Object} options A WPRequest _options object\n * @param {Boolean} forceAuthentication whether to force authentication on the request\n * @param {Object} A superagent request object, conditionally configured to use basic auth\n */\n\n\nfunction _auth(request, options, forceAuthentication) {\n  // If we're not supposed to authenticate, don't even start\n  if (!forceAuthentication && !options.auth && !options.nonce) {\n    return request;\n  } // Enable nonce in options for Cookie authentication http://wp-api.org/guides/authentication.html\n\n\n  if (options.nonce) {\n    request.set('X-WP-Nonce', options.nonce);\n    return request;\n  } // Retrieve the username & password from the request options if they weren't provided\n\n\n  var username = options.username;\n  var password = options.password; // If no username or no password, can't authenticate\n\n  if (!username || !password) {\n    return request;\n  } // Can authenticate: set basic auth parameters on the request\n\n\n  return request.auth(username, password);\n} // Pagination-Related Helpers\n// ==========================\n\n/**\n * Extract the body property from the superagent response, or else try to parse\n * the response text to get a JSON object.\n *\n * @private\n * @param {Object} response      The response object from the HTTP request\n * @param {String} response.text The response content as text\n * @param {Object} response.body The response content as a JS object\n * @returns {Object} The response content as a JS object\n */\n\n\nfunction extractResponseBody(response) {\n  var responseBody = response.body;\n\n  if (isEmptyObject(responseBody) && response.type === 'text/html') {\n    // Response may have come back as HTML due to caching plugin; try to parse\n    // the response text into JSON\n    try {\n      responseBody = JSON.parse(response.text);\n    } catch (e) {// Swallow errors, it's OK to fall back to returning the body\n    }\n  }\n\n  return responseBody;\n}\n/**\n * If the response is not paged, return the body as-is. If pagination\n * information is present in the response headers, parse those headers into\n * a custom `_paging` property on the response body. `_paging` contains links\n * to the previous and next pages in the collection, as well as metadata\n * about the size and number of pages in the collection.\n *\n * The structure of the `_paging` property is as follows:\n *\n * - `total` {Integer} The total number of records in the collection\n * - `totalPages` {Integer} The number of pages available\n * - `links` {Object} The parsed \"links\" headers, separated into individual URI strings\n * - `next` {WPRequest} A WPRequest object bound to the \"next\" page (if page exists)\n * - `prev` {WPRequest} A WPRequest object bound to the \"previous\" page (if page exists)\n *\n * @private\n * @param {Object} result           The response object from the HTTP request\n * @param {Object} options          The options hash from the original request\n * @param {String} options.endpoint The base URL of the requested API endpoint\n * @param {Object} httpTransport    The HTTP transport object used by the original request\n * @returns {Object} The pagination metadata object for this HTTP request, or else null\n */\n\n\nfunction createPaginationObject(result, options, httpTransport) {\n  var _paging = null;\n\n  if (!result.headers) {\n    // No headers: return as-is\n    return _paging;\n  } // Guard against capitalization inconsistencies in returned headers\n\n\n  Object.keys(result.headers).forEach(function (header) {\n    result.headers[header.toLowerCase()] = result.headers[header];\n  });\n\n  if (!result.headers['x-wp-totalpages']) {\n    // No paging: return as-is\n    return _paging;\n  }\n\n  var totalPages = +result.headers['x-wp-totalpages'];\n\n  if (!totalPages || totalPages === 0) {\n    // No paging: return as-is\n    return _paging;\n  } // Decode the link header object\n\n\n  var links = result.headers.link ? parseLinkHeader(result.headers.link) : {}; // Store pagination data from response headers on the response collection\n\n  _paging = {\n    total: +result.headers['x-wp-total'],\n    totalPages: totalPages,\n    links: links\n  }; // Create a WPRequest instance pre-bound to the \"next\" page, if available\n\n  if (links.next) {\n    _paging.next = new WPRequest(_objectSpread({}, options, {\n      transport: httpTransport,\n      endpoint: links.next\n    }));\n  } // Create a WPRequest instance pre-bound to the \"prev\" page, if available\n\n\n  if (links.prev) {\n    _paging.prev = new WPRequest(_objectSpread({}, options, {\n      transport: httpTransport,\n      endpoint: links.prev\n    }));\n  }\n\n  return _paging;\n} // HTTP-Related Helpers\n// ====================\n\n/**\n * Submit the provided superagent request object, invoke a callback (if it was\n * provided), and return a promise to the response from the HTTP request.\n *\n * @private\n * @param {Object} request A superagent request object\n * @param {Function} callback A callback function (optional)\n * @param {Function} transform A function to transform the result data\n * @returns {Promise} A promise to the superagent request\n */\n\n\nfunction invokeAndPromisify(request, callback, transform) {\n  return new Promise(function (resolve, reject) {\n    // Fire off the result\n    request.end(function (err, result) {\n      // Return the results as a promise\n      if (err || result.error) {\n        reject(err || result.error);\n      } else {\n        resolve(result);\n      }\n    });\n  }).then(transform).then(function (result) {\n    // If a node-style callback was provided, call it, but also return the\n    // result value for use via the returned Promise\n    if (callback && typeof callback === 'function') {\n      callback(null, result);\n    }\n\n    return result;\n  }, function (err) {\n    // If the API provided an error object, it will be available within the\n    // superagent response object as response.body (containing the response\n    // JSON). If that object exists, it will have a .code property if it is\n    // truly an API error (non-API errors will not have a .code).\n    if (err.response && err.response.body && err.response.body.code) {\n      // Forward API error response JSON on to the calling method: omit\n      // all transport-specific (superagent-specific) properties\n      err = err.response.body;\n    } // If a callback was provided, ensure it is called with the error; otherwise\n    // re-throw the error so that it can be handled by a Promise .catch or .then\n\n\n    if (callback && typeof callback === 'function') {\n      callback(err);\n    } else {\n      throw err;\n    }\n  });\n}\n/**\n * Return the body of the request, augmented with pagination information if the\n * result is a paged collection.\n *\n * @private\n * @param {WPRequest} wpreq The WPRequest representing the returned HTTP response\n * @param {Object} result The results from the HTTP request\n * @returns {Object} The \"body\" property of the result, conditionally augmented with\n *                  pagination information if the result is a partial collection.\n */\n\n\nfunction returnBody(wpreq, result) {\n  var body = extractResponseBody(result);\n\n  var _paging = createPaginationObject(result, wpreq._options, wpreq.transport);\n\n  if (_paging) {\n    body._paging = _paging;\n  }\n\n  return body;\n}\n/**\n * Extract and return the headers property from a superagent response object\n *\n * @private\n * @param {Object} result The results from the HTTP request\n * @returns {Object} The \"headers\" property of the result\n */\n\n\nfunction returnHeaders(result) {\n  return result.headers;\n} // HTTP Methods: Private HTTP-verb versions\n// ========================================\n\n/**\n * @method get\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Function} [callback] A callback to invoke with the results of the GET request\n * @returns {Promise} A promise to the results of the HTTP request\n */\n\n\nfunction _httpGet(wpreq, callback) {\n  checkMethodSupport('get', wpreq);\n  var url = wpreq.toString();\n\n  var request = _auth(agent.get(url), wpreq._options);\n\n  request = _setHeaders(request, wpreq._options);\n  return invokeAndPromisify(request, callback, returnBody.bind(null, wpreq));\n}\n/**\n * Invoke an HTTP \"POST\" request against the provided endpoint\n * @method post\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Object} data The data for the POST request\n * @param {Function} [callback] A callback to invoke with the results of the POST request\n * @returns {Promise} A promise to the results of the HTTP request\n */\n\n\nfunction _httpPost(wpreq, data, callback) {\n  checkMethodSupport('post', wpreq);\n  var url = wpreq.toString();\n  data = data || {};\n\n  var request = _auth(agent.post(url), wpreq._options, true);\n\n  request = _setHeaders(request, wpreq._options);\n\n  if (wpreq._attachment) {\n    // Data must be form-encoded alongside image attachment\n    request = objectReduce(data, function (req, value, key) {\n      return req.field(key, value);\n    }, request.attach('file', wpreq._attachment, wpreq._attachmentName));\n  } else {\n    request = request.send(data);\n  }\n\n  return invokeAndPromisify(request, callback, returnBody.bind(null, wpreq));\n}\n/**\n * @method put\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Object} data The data for the PUT request\n * @param {Function} [callback] A callback to invoke with the results of the PUT request\n * @returns {Promise} A promise to the results of the HTTP request\n */\n\n\nfunction _httpPut(wpreq, data, callback) {\n  checkMethodSupport('put', wpreq);\n  var url = wpreq.toString();\n  data = data || {};\n\n  var request = _auth(agent.put(url), wpreq._options, true).send(data);\n\n  request = _setHeaders(request, wpreq._options);\n  return invokeAndPromisify(request, callback, returnBody.bind(null, wpreq));\n}\n/**\n * @method delete\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Object} [data] Data to send along with the DELETE request\n * @param {Function} [callback] A callback to invoke with the results of the DELETE request\n * @returns {Promise} A promise to the results of the HTTP request\n */\n\n\nfunction _httpDelete(wpreq, data, callback) {\n  if (!callback && typeof data === 'function') {\n    callback = data;\n    data = null;\n  }\n\n  checkMethodSupport('delete', wpreq);\n  var url = wpreq.toString();\n\n  var request = _auth(agent.del(url), wpreq._options, true).send(data);\n\n  request = _setHeaders(request, wpreq._options);\n  return invokeAndPromisify(request, callback, returnBody.bind(null, wpreq));\n}\n/**\n * @method head\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Function} [callback] A callback to invoke with the results of the HEAD request\n * @returns {Promise} A promise to the header results of the HTTP request\n */\n\n\nfunction _httpHead(wpreq, callback) {\n  checkMethodSupport('head', wpreq);\n  var url = wpreq.toString();\n\n  var request = _auth(agent.head(url), wpreq._options);\n\n  request = _setHeaders(request, wpreq._options);\n  return invokeAndPromisify(request, callback, returnHeaders);\n}\n\nmodule.exports = {\n  delete: _httpDelete,\n  get: _httpGet,\n  head: _httpHead,\n  post: _httpPost,\n  put: _httpPut\n};","map":{"version":3,"sources":["/Users/hiromi/ionic-react-wordpress/node_modules/wpapi/lib/http-transport.js"],"names":["agent","require","parseLinkHeader","parse","WPRequest","checkMethodSupport","objectReduce","isEmptyObject","_setHeaders","request","options","headers","value","key","set","_auth","forceAuthentication","auth","nonce","username","password","extractResponseBody","response","responseBody","body","type","JSON","text","e","createPaginationObject","result","httpTransport","_paging","Object","keys","forEach","header","toLowerCase","totalPages","links","link","total","next","transport","endpoint","prev","invokeAndPromisify","callback","transform","Promise","resolve","reject","end","err","error","then","code","returnBody","wpreq","_options","returnHeaders","_httpGet","url","toString","get","bind","_httpPost","data","post","_attachment","req","field","attach","_attachmentName","send","_httpPut","put","_httpDelete","del","_httpHead","head","module","exports","delete"],"mappings":"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","sourcesContent":["/**\n * @module http-transport\n */\n'use strict';\n\nconst agent = require( 'superagent' );\nconst parseLinkHeader = require( 'li' ).parse;\n\nconst WPRequest = require( './constructors/wp-request' );\nconst checkMethodSupport = require( './util/check-method-support' );\nconst objectReduce = require( './util/object-reduce' );\nconst isEmptyObject = require( './util/is-empty-object' );\n\n/**\n * Set any provided headers on the outgoing request object. Runs after _auth.\n *\n * @method _setHeaders\n * @private\n * @param {Object} request A superagent request object\n * @param {Object} options A WPRequest _options object\n * @param {Object} A superagent request object, with any available headers set\n */\nfunction _setHeaders( request, options ) {\n\t// If there's no headers, do nothing\n\tif ( ! options.headers ) {\n\t\treturn request;\n\t}\n\n\treturn objectReduce(\n\t\toptions.headers,\n\t\t( request, value, key ) => request.set( key, value ),\n\t\trequest\n\t);\n}\n\n/**\n * Conditionally set basic authentication on a server request object.\n *\n * @method _auth\n * @private\n * @param {Object} request A superagent request object\n * @param {Object} options A WPRequest _options object\n * @param {Boolean} forceAuthentication whether to force authentication on the request\n * @param {Object} A superagent request object, conditionally configured to use basic auth\n */\nfunction _auth( request, options, forceAuthentication ) {\n\t// If we're not supposed to authenticate, don't even start\n\tif ( ! forceAuthentication && ! options.auth && ! options.nonce ) {\n\t\treturn request;\n\t}\n\n\t// Enable nonce in options for Cookie authentication http://wp-api.org/guides/authentication.html\n\tif ( options.nonce ) {\n\t\trequest.set( 'X-WP-Nonce', options.nonce );\n\t\treturn request;\n\t}\n\n\t// Retrieve the username & password from the request options if they weren't provided\n\tconst username = options.username;\n\tconst password = options.password;\n\n\t// If no username or no password, can't authenticate\n\tif ( ! username || ! password ) {\n\t\treturn request;\n\t}\n\n\t// Can authenticate: set basic auth parameters on the request\n\treturn request.auth( username, password );\n}\n\n// Pagination-Related Helpers\n// ==========================\n\n/**\n * Extract the body property from the superagent response, or else try to parse\n * the response text to get a JSON object.\n *\n * @private\n * @param {Object} response      The response object from the HTTP request\n * @param {String} response.text The response content as text\n * @param {Object} response.body The response content as a JS object\n * @returns {Object} The response content as a JS object\n */\nfunction extractResponseBody( response ) {\n\tlet responseBody = response.body;\n\tif ( isEmptyObject( responseBody ) && response.type === 'text/html' ) {\n\t\t// Response may have come back as HTML due to caching plugin; try to parse\n\t\t// the response text into JSON\n\t\ttry {\n\t\t\tresponseBody = JSON.parse( response.text );\n\t\t} catch ( e ) {\n\t\t\t// Swallow errors, it's OK to fall back to returning the body\n\t\t}\n\t}\n\treturn responseBody;\n}\n\n/**\n * If the response is not paged, return the body as-is. If pagination\n * information is present in the response headers, parse those headers into\n * a custom `_paging` property on the response body. `_paging` contains links\n * to the previous and next pages in the collection, as well as metadata\n * about the size and number of pages in the collection.\n *\n * The structure of the `_paging` property is as follows:\n *\n * - `total` {Integer} The total number of records in the collection\n * - `totalPages` {Integer} The number of pages available\n * - `links` {Object} The parsed \"links\" headers, separated into individual URI strings\n * - `next` {WPRequest} A WPRequest object bound to the \"next\" page (if page exists)\n * - `prev` {WPRequest} A WPRequest object bound to the \"previous\" page (if page exists)\n *\n * @private\n * @param {Object} result           The response object from the HTTP request\n * @param {Object} options          The options hash from the original request\n * @param {String} options.endpoint The base URL of the requested API endpoint\n * @param {Object} httpTransport    The HTTP transport object used by the original request\n * @returns {Object} The pagination metadata object for this HTTP request, or else null\n */\nfunction createPaginationObject( result, options, httpTransport ) {\n\tlet _paging = null;\n\n\tif ( ! result.headers ) {\n\t\t// No headers: return as-is\n\t\treturn _paging;\n\t}\n\n\t// Guard against capitalization inconsistencies in returned headers\n\tObject.keys( result.headers ).forEach( ( header ) => {\n\t\tresult.headers[ header.toLowerCase() ] = result.headers[ header ];\n\t} );\n\n\tif ( ! result.headers[ 'x-wp-totalpages' ] ) {\n\t\t// No paging: return as-is\n\t\treturn _paging;\n\t}\n\n\tconst totalPages = +result.headers[ 'x-wp-totalpages' ];\n\n\tif ( ! totalPages || totalPages === 0 ) {\n\t\t// No paging: return as-is\n\t\treturn _paging;\n\t}\n\n\t// Decode the link header object\n\tconst links = result.headers.link ?\n\t\tparseLinkHeader( result.headers.link ) :\n\t\t{};\n\n\t// Store pagination data from response headers on the response collection\n\t_paging = {\n\t\ttotal: +result.headers[ 'x-wp-total' ],\n\t\ttotalPages: totalPages,\n\t\tlinks: links,\n\t};\n\n\t// Create a WPRequest instance pre-bound to the \"next\" page, if available\n\tif ( links.next ) {\n\t\t_paging.next = new WPRequest( {\n\t\t\t...options,\n\t\t\ttransport: httpTransport,\n\t\t\tendpoint: links.next,\n\t\t} );\n\t}\n\n\t// Create a WPRequest instance pre-bound to the \"prev\" page, if available\n\tif ( links.prev ) {\n\t\t_paging.prev = new WPRequest( {\n\t\t\t...options,\n\t\t\ttransport: httpTransport,\n\t\t\tendpoint: links.prev,\n\t\t} );\n\t}\n\n\treturn _paging;\n}\n\n// HTTP-Related Helpers\n// ====================\n\n/**\n * Submit the provided superagent request object, invoke a callback (if it was\n * provided), and return a promise to the response from the HTTP request.\n *\n * @private\n * @param {Object} request A superagent request object\n * @param {Function} callback A callback function (optional)\n * @param {Function} transform A function to transform the result data\n * @returns {Promise} A promise to the superagent request\n */\nfunction invokeAndPromisify( request, callback, transform ) {\n\treturn new Promise( ( resolve, reject ) => {\n\t\t// Fire off the result\n\t\trequest.end( ( err, result ) => {\n\n\t\t\t// Return the results as a promise\n\t\t\tif ( err || result.error ) {\n\t\t\t\treject( err || result.error );\n\t\t\t} else {\n\t\t\t\tresolve( result );\n\t\t\t}\n\t\t} );\n\t} ).then( transform ).then( ( result ) => {\n\t\t// If a node-style callback was provided, call it, but also return the\n\t\t// result value for use via the returned Promise\n\t\tif ( callback && typeof callback === 'function' ) {\n\t\t\tcallback( null, result );\n\t\t}\n\t\treturn result;\n\t}, ( err ) => {\n\t\t// If the API provided an error object, it will be available within the\n\t\t// superagent response object as response.body (containing the response\n\t\t// JSON). If that object exists, it will have a .code property if it is\n\t\t// truly an API error (non-API errors will not have a .code).\n\t\tif ( err.response && err.response.body && err.response.body.code ) {\n\t\t\t// Forward API error response JSON on to the calling method: omit\n\t\t\t// all transport-specific (superagent-specific) properties\n\t\t\terr = err.response.body;\n\t\t}\n\t\t// If a callback was provided, ensure it is called with the error; otherwise\n\t\t// re-throw the error so that it can be handled by a Promise .catch or .then\n\t\tif ( callback && typeof callback === 'function' ) {\n\t\t\tcallback( err );\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t} );\n}\n\n/**\n * Return the body of the request, augmented with pagination information if the\n * result is a paged collection.\n *\n * @private\n * @param {WPRequest} wpreq The WPRequest representing the returned HTTP response\n * @param {Object} result The results from the HTTP request\n * @returns {Object} The \"body\" property of the result, conditionally augmented with\n *                  pagination information if the result is a partial collection.\n */\nfunction returnBody( wpreq, result ) {\n\tconst body = extractResponseBody( result );\n\tconst _paging = createPaginationObject( result, wpreq._options, wpreq.transport );\n\tif ( _paging ) {\n\t\tbody._paging = _paging;\n\t}\n\treturn body;\n}\n\n/**\n * Extract and return the headers property from a superagent response object\n *\n * @private\n * @param {Object} result The results from the HTTP request\n * @returns {Object} The \"headers\" property of the result\n */\nfunction returnHeaders( result ) {\n\treturn result.headers;\n}\n\n// HTTP Methods: Private HTTP-verb versions\n// ========================================\n\n/**\n * @method get\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Function} [callback] A callback to invoke with the results of the GET request\n * @returns {Promise} A promise to the results of the HTTP request\n */\nfunction _httpGet( wpreq, callback ) {\n\tcheckMethodSupport( 'get', wpreq );\n\tconst url = wpreq.toString();\n\n\tlet request = _auth( agent.get( url ), wpreq._options );\n\trequest = _setHeaders( request, wpreq._options );\n\n\treturn invokeAndPromisify( request, callback, returnBody.bind( null, wpreq ) );\n}\n\n/**\n * Invoke an HTTP \"POST\" request against the provided endpoint\n * @method post\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Object} data The data for the POST request\n * @param {Function} [callback] A callback to invoke with the results of the POST request\n * @returns {Promise} A promise to the results of the HTTP request\n */\nfunction _httpPost( wpreq, data, callback ) {\n\tcheckMethodSupport( 'post', wpreq );\n\tconst url = wpreq.toString();\n\tdata = data || {};\n\tlet request = _auth( agent.post( url ), wpreq._options, true );\n\trequest = _setHeaders( request, wpreq._options );\n\n\tif ( wpreq._attachment ) {\n\t\t// Data must be form-encoded alongside image attachment\n\t\trequest = objectReduce(\n\t\t\tdata,\n\t\t\t( req, value, key ) => req.field( key, value ),\n\t\t\trequest.attach( 'file', wpreq._attachment, wpreq._attachmentName )\n\t\t);\n\t} else {\n\t\trequest = request.send( data );\n\t}\n\n\treturn invokeAndPromisify( request, callback, returnBody.bind( null, wpreq ) );\n}\n\n/**\n * @method put\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Object} data The data for the PUT request\n * @param {Function} [callback] A callback to invoke with the results of the PUT request\n * @returns {Promise} A promise to the results of the HTTP request\n */\nfunction _httpPut( wpreq, data, callback ) {\n\tcheckMethodSupport( 'put', wpreq );\n\tconst url = wpreq.toString();\n\tdata = data || {};\n\n\tlet request = _auth( agent.put( url ), wpreq._options, true ).send( data );\n\trequest = _setHeaders( request, wpreq._options );\n\n\treturn invokeAndPromisify( request, callback, returnBody.bind( null, wpreq ) );\n}\n\n/**\n * @method delete\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Object} [data] Data to send along with the DELETE request\n * @param {Function} [callback] A callback to invoke with the results of the DELETE request\n * @returns {Promise} A promise to the results of the HTTP request\n */\nfunction _httpDelete( wpreq, data, callback ) {\n\tif ( ! callback && typeof data === 'function' ) {\n\t\tcallback = data;\n\t\tdata = null;\n\t}\n\tcheckMethodSupport( 'delete', wpreq );\n\tconst url = wpreq.toString();\n\tlet request = _auth( agent.del( url ), wpreq._options, true ).send( data );\n\trequest = _setHeaders( request, wpreq._options );\n\n\treturn invokeAndPromisify( request, callback, returnBody.bind( null, wpreq ) );\n}\n\n/**\n * @method head\n * @async\n * @param {WPRequest} wpreq A WPRequest query object\n * @param {Function} [callback] A callback to invoke with the results of the HEAD request\n * @returns {Promise} A promise to the header results of the HTTP request\n */\nfunction _httpHead( wpreq, callback ) {\n\tcheckMethodSupport( 'head', wpreq );\n\tconst url = wpreq.toString();\n\tlet request = _auth( agent.head( url ), wpreq._options );\n\trequest = _setHeaders( request, wpreq._options );\n\n\treturn invokeAndPromisify( request, callback, returnHeaders );\n}\n\nmodule.exports = {\n\tdelete: _httpDelete,\n\tget: _httpGet,\n\thead: _httpHead,\n\tpost: _httpPost,\n\tput: _httpPut,\n};\n"]},"metadata":{},"sourceType":"script"}