{"ast":null,"code":"import React,{Fragment}from'react';import{IonSkeletonText,IonItem,IonLabel,IonBadge}from'@ionic/react';var Single=function Single(_ref){var post=_ref.post,loading=_ref.loading;if(loading||!post){return/*#__PURE__*/React.createElement(IonItem,null,/*#__PURE__*/React.createElement(IonLabel,null,/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IonSkeletonText,{animated:true}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(IonSkeletonText,{animated:true}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(IonSkeletonText,{animated:true}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(IonSkeletonText,{animated:true}),/*#__PURE__*/React.createElement(\"br\",null))));}return/*#__PURE__*/React.createElement(IonItem,null,/*#__PURE__*/React.createElement(\"section\",{className:\"ion-padding ion-margin-top\"},/*#__PURE__*/React.createElement(IonLabel,null,/*#__PURE__*/React.createElement(\"h1\",{dangerouslySetInnerHTML:{__html:post.title.rendered}})),/*#__PURE__*/React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:post.content.rendered}}),post._embedded&&post._embedded[\"wp:term\"]?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"p\",null,\"Categories:\"),post._embedded[\"wp:term\"].map(function(terms){if(!terms||terms.length<1)return null;return/*#__PURE__*/React.createElement(Fragment,{key:\"cat-\".concat(terms[0].id)},terms.map(function(term){if(term.taxonomy!==\"category\")return null;return/*#__PURE__*/React.createElement(IonBadge,{key:\"category-\".concat(term.id),style:{marginRight:5}},term.name);}));}),/*#__PURE__*/React.createElement(\"p\",null,\"Tags:\"),post._embedded[\"wp:term\"].map(function(terms){if(!terms||terms.length<1)return null;return/*#__PURE__*/React.createElement(Fragment,{key:\"tag-\".concat(terms[0].id)},terms.map(function(term){if(term.taxonomy!==\"post_tag\")return null;return/*#__PURE__*/React.createElement(IonBadge,{key:\"post-tag-\".concat(term.id),style:{marginRight:5}},term.name);}));})):null));};export default Single;","map":{"version":3,"sources":["/Users/hiromi/ionic-react-wordpress/src/components/Single.tsx"],"names":["React","Fragment","IonSkeletonText","IonItem","IonLabel","IonBadge","Single","post","loading","__html","title","rendered","content","_embedded","map","terms","length","id","term","taxonomy","marginRight","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,eAAT,CAA0BC,OAA1B,CAAmCC,QAAnC,CAA6CC,QAA7C,KAA6D,cAA7D,CAEA,GAAMC,CAAAA,MAGJ,CAAG,QAHCA,CAAAA,MAGD,MAAoB,IAAlBC,CAAAA,IAAkB,MAAlBA,IAAkB,CAAbC,OAAa,MAAbA,OAAa,CACvB,GAAIA,OAAO,EAAI,CAACD,IAAhB,CAAsB,CACpB,mBACI,oBAAC,OAAD,mBACE,oBAAC,QAAD,mBACE,0CACE,oBAAC,eAAD,EAAiB,QAAQ,KAAzB,EADF,cAC8B,8BAD9B,cAEE,oBAAC,eAAD,EAAiB,QAAQ,KAAzB,EAFF,cAE8B,8BAF9B,cAGE,oBAAC,eAAD,EAAiB,QAAQ,KAAzB,EAHF,cAG8B,8BAH9B,cAIE,oBAAC,eAAD,EAAiB,QAAQ,KAAzB,EAJF,cAI8B,8BAJ9B,CADF,CADF,CADJ,CAYD,CACD,mBACE,oBAAC,OAAD,mBACI,+BAAS,SAAS,CAAC,4BAAnB,eACI,oBAAC,QAAD,mBACI,0BAAI,uBAAuB,CAAE,CAACE,MAAM,CAAEF,IAAI,CAACG,KAAL,CAAWC,QAApB,CAA7B,EADJ,CADJ,cAII,2BAAK,uBAAuB,CAAE,CAACF,MAAM,CAAEF,IAAI,CAACK,OAAL,CAAaD,QAAtB,CAA9B,EAJJ,CAKSJ,IAAI,CAACM,SAAL,EAAkBN,IAAI,CAACM,SAAL,CAAe,SAAf,CAAlB,cACC,oBAAC,QAAD,mBACE,2CADF,CAEGN,IAAI,CAACM,SAAL,CAAe,SAAf,EAA0BC,GAA1B,CAA8B,SAAAC,KAAK,CAAI,CACtC,GAAI,CAACA,KAAD,EAAUA,KAAK,CAACC,MAAN,CAAe,CAA7B,CAAgC,MAAO,KAAP,CAChC,mBACE,oBAAC,QAAD,EAAU,GAAG,eAASD,KAAK,CAAC,CAAD,CAAL,CAASE,EAAlB,CAAb,EACGF,KAAK,CAACD,GAAN,CAAU,SAAAI,IAAI,CAAI,CACjB,GAAIA,IAAI,CAACC,QAAL,GAAkB,UAAtB,CAAkC,MAAO,KAAP,CAClC,mBACE,oBAAC,QAAD,EAAU,GAAG,oBAAcD,IAAI,CAACD,EAAnB,CAAb,CAAsC,KAAK,CAAE,CAACG,WAAW,CAAE,CAAd,CAA7C,EAAgEF,IAAI,CAACG,IAArE,CADF,CAGD,CALA,CADH,CADF,CAUD,CAZA,CAFH,cAeE,qCAfF,CAgBGd,IAAI,CAACM,SAAL,CAAe,SAAf,EAA0BC,GAA1B,CAA8B,SAAAC,KAAK,CAAI,CACtC,GAAI,CAACA,KAAD,EAAUA,KAAK,CAACC,MAAN,CAAe,CAA7B,CAAgC,MAAO,KAAP,CAChC,mBACE,oBAAC,QAAD,EAAU,GAAG,eAASD,KAAK,CAAC,CAAD,CAAL,CAASE,EAAlB,CAAb,EACGF,KAAK,CAACD,GAAN,CAAU,SAAAI,IAAI,CAAI,CACjB,GAAIA,IAAI,CAACC,QAAL,GAAkB,UAAtB,CAAkC,MAAO,KAAP,CAClC,mBACE,oBAAC,QAAD,EAAU,GAAG,oBAAcD,IAAI,CAACD,EAAnB,CAAb,CAAsC,KAAK,CAAE,CAACG,WAAW,CAAE,CAAd,CAA7C,EAAgEF,IAAI,CAACG,IAArE,CADF,CAGD,CALA,CADH,CADF,CAUD,CAZA,CAhBH,CADD,CA+BE,IApCX,CADJ,CADF,CA0CD,CA5DD,CA8DA,cAAef,CAAAA,MAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { WPPost } from '../wp.interface';\nimport { IonSkeletonText, IonItem, IonLabel, IonBadge } from '@ionic/react';\n\nconst Single: React.FC<{\n    post?: WPPost;\n    loading?: boolean;\n}> = ({post,loading}) => {\n  if (loading || !post) {\n    return (\n        <IonItem>\n          <IonLabel>\n            <p>\n              <IonSkeletonText animated /><br />\n              <IonSkeletonText animated /><br />\n              <IonSkeletonText animated /><br />\n              <IonSkeletonText animated /><br />\n            </p>\n          </IonLabel>\n        </IonItem>\n    )\n  }\n  return (\n    <IonItem>\n        <section className=\"ion-padding ion-margin-top\">\n            <IonLabel>\n                <h1 dangerouslySetInnerHTML={{__html: post.title.rendered}} />\n            </IonLabel>\n            <div dangerouslySetInnerHTML={{__html: post.content.rendered}} />\n                {post._embedded && post._embedded[\"wp:term\"] ? (\n                  <Fragment>\n                    <p>Categories:</p>\n                    {post._embedded[\"wp:term\"].map(terms => {\n                      if (!terms || terms.length < 1) return null;\n                      return (\n                        <Fragment key={`cat-${terms[0].id}`}>\n                          {terms.map(term => {\n                            if (term.taxonomy !== \"category\") return null;\n                            return (\n                              <IonBadge key={`category-${term.id}`} style={{marginRight: 5}}>{term.name}</IonBadge>\n                            )\n                          })}\n                        </Fragment>\n                      )\n                    })}\n                    <p>Tags:</p>\n                    {post._embedded[\"wp:term\"].map(terms => {\n                      if (!terms || terms.length < 1) return null;\n                      return (\n                        <Fragment key={`tag-${terms[0].id}`}>\n                          {terms.map(term => {\n                            if (term.taxonomy !== \"post_tag\") return null;\n                            return (\n                              <IonBadge key={`post-tag-${term.id}`} style={{marginRight: 5}}>{term.name}</IonBadge>\n                            )\n                          })}\n                        </Fragment>\n                      )\n                    })}\n                  </Fragment>\n                ): null}\n        </section>\n    </IonItem>\n  );\n};\n\nexport default Single;\n"]},"metadata":{},"sourceType":"module"}