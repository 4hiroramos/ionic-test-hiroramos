{"ast":null,"code":"/**\n * @module path-part-setter\n */\n'use strict';\n/**\n * Return a function to set part of the request URL path.\n *\n * Path part setter methods may be either dynamic (*i.e.* may represent a\n * \"named group\") or non-dynamic (representing a static part of the URL, which\n * is usually a collection endpoint of some sort). Which type of function is\n * returned depends on whether a given route has one or many sub-resources.\n *\n * @alias module:lib/path-part-setter.create\n * @param {Object} node An object representing a level of an endpoint path hierarchy\n * @returns {Function} A path part setter function\n */\n\nfunction createPathPartSetter(node) {\n  // Local references to `node` properties used by returned functions\n  const nodeLevel = node.level;\n  const nodeName = node.names[0];\n  const supportedMethods = node.methods || [];\n  const dynamicChildren = node.children ? Object.keys(node.children).map(key => node.children[key]).filter(childNode => childNode.namedGroup === true) : [];\n  const dynamicChild = dynamicChildren.length === 1 && dynamicChildren[0];\n  const dynamicChildLevel = dynamicChild && dynamicChild.level;\n\n  if (node.namedGroup) {\n    /**\n     * Set a dymanic (named-group) path part of a query URL.\n     *\n     * @example\n     *\n     *     // id() is a dynamic path part setter:\n     *     wp.posts().id( 7 ); // Get posts/7\n     *\n     * @chainable\n     * @param  {String|Number} val The path part value to set\n     * @returns {Object} The handler instance (for chaining)\n     */\n    return function (val) {\n      this.setPathPart(nodeLevel, val);\n\n      if (supportedMethods.length) {\n        this._supportedMethods = supportedMethods;\n      }\n\n      return this;\n    };\n  } else {\n    /**\n     * Set a non-dymanic (non-named-group) path part of a query URL, and\n     * set the value of a subresource if an input value is provided and\n     * exactly one named-group child node exists.\n     *\n     * @example\n     *\n     *     // revisions() is a non-dynamic path part setter:\n     *     wp.posts().id( 4 ).revisions();       // Get posts/4/revisions\n     *     wp.posts().id( 4 ).revisions( 1372 ); // Get posts/4/revisions/1372\n     *\n     * @chainable\n     * @param  {String|Number} [val] The path part value to set (if provided)\n     *                               for a subresource within this resource\n     * @returns {Object} The handler instance (for chaining)\n     */\n    return function (val) {\n      // If the path part is not a namedGroup, it should have exactly one\n      // entry in the names array: use that as the value for this setter,\n      // as it will usually correspond to a collection endpoint.\n      this.setPathPart(nodeLevel, nodeName); // If this node has exactly one dynamic child, this method may act as\n      // a setter for that child node. `dynamicChildLevel` will be falsy if the\n      // node does not have a child or has multiple children.\n\n      if (val !== undefined && dynamicChildLevel) {\n        this.setPathPart(dynamicChildLevel, val);\n      }\n\n      return this;\n    };\n  }\n}\n\nmodule.exports = {\n  create: createPathPartSetter\n};","map":{"version":3,"sources":["/Users/hiromi/ionic-react-wordpress/node_modules/wpapi/lib/path-part-setter.js"],"names":["createPathPartSetter","node","nodeLevel","level","nodeName","names","supportedMethods","methods","dynamicChildren","children","Object","keys","map","key","filter","childNode","namedGroup","dynamicChild","length","dynamicChildLevel","val","setPathPart","_supportedMethods","undefined","module","exports","create"],"mappings":"AAAA;;;AAGA;AAEA;;;;;;;;;;;;;AAYA,SAASA,oBAAT,CAA+BC,IAA/B,EAAsC;AACrC;AACA,QAAMC,SAAS,GAAGD,IAAI,CAACE,KAAvB;AACA,QAAMC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAY,CAAZ,CAAjB;AACA,QAAMC,gBAAgB,GAAGL,IAAI,CAACM,OAAL,IAAgB,EAAzC;AACA,QAAMC,eAAe,GAAGP,IAAI,CAACQ,QAAL,GACvBC,MAAM,CAACC,IAAP,CAAaV,IAAI,CAACQ,QAAlB,EACEG,GADF,CACOC,GAAG,IAAIZ,IAAI,CAACQ,QAAL,CAAeI,GAAf,CADd,EAEEC,MAFF,CAEUC,SAAS,IAAMA,SAAS,CAACC,UAAV,KAAyB,IAFlD,CADuB,GAIvB,EAJD;AAKA,QAAMC,YAAY,GAAGT,eAAe,CAACU,MAAhB,KAA2B,CAA3B,IAAgCV,eAAe,CAAE,CAAF,CAApE;AACA,QAAMW,iBAAiB,GAAGF,YAAY,IAAIA,YAAY,CAACd,KAAvD;;AAEA,MAAKF,IAAI,CAACe,UAAV,EAAuB;AACtB;;;;;;;;;;;;AAYA,WAAO,UAAUI,GAAV,EAAgB;AACtB,WAAKC,WAAL,CAAkBnB,SAAlB,EAA6BkB,GAA7B;;AACA,UAAKd,gBAAgB,CAACY,MAAtB,EAA+B;AAC9B,aAAKI,iBAAL,GAAyBhB,gBAAzB;AACA;;AACD,aAAO,IAAP;AACA,KAND;AAOA,GApBD,MAoBO;AACN;;;;;;;;;;;;;;;;AAgBA,WAAO,UAAUc,GAAV,EAAgB;AACtB;AACA;AACA;AACA,WAAKC,WAAL,CAAkBnB,SAAlB,EAA6BE,QAA7B,EAJsB,CAMtB;AACA;AACA;;AACA,UAAKgB,GAAG,KAAKG,SAAR,IAAqBJ,iBAA1B,EAA8C;AAC7C,aAAKE,WAAL,CAAkBF,iBAAlB,EAAqCC,GAArC;AACA;;AACD,aAAO,IAAP;AACA,KAbD;AAcA;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,MAAM,EAAE1B;AADQ,CAAjB","sourcesContent":["/**\n * @module path-part-setter\n */\n'use strict';\n\n/**\n * Return a function to set part of the request URL path.\n *\n * Path part setter methods may be either dynamic (*i.e.* may represent a\n * \"named group\") or non-dynamic (representing a static part of the URL, which\n * is usually a collection endpoint of some sort). Which type of function is\n * returned depends on whether a given route has one or many sub-resources.\n *\n * @alias module:lib/path-part-setter.create\n * @param {Object} node An object representing a level of an endpoint path hierarchy\n * @returns {Function} A path part setter function\n */\nfunction createPathPartSetter( node ) {\n\t// Local references to `node` properties used by returned functions\n\tconst nodeLevel = node.level;\n\tconst nodeName = node.names[ 0 ];\n\tconst supportedMethods = node.methods || [];\n\tconst dynamicChildren = node.children ?\n\t\tObject.keys( node.children )\n\t\t\t.map( key => node.children[ key ] )\n\t\t\t.filter( childNode => ( childNode.namedGroup === true ) ) :\n\t\t[];\n\tconst dynamicChild = dynamicChildren.length === 1 && dynamicChildren[ 0 ];\n\tconst dynamicChildLevel = dynamicChild && dynamicChild.level;\n\n\tif ( node.namedGroup ) {\n\t\t/**\n\t\t * Set a dymanic (named-group) path part of a query URL.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t *     // id() is a dynamic path part setter:\n\t\t *     wp.posts().id( 7 ); // Get posts/7\n\t\t *\n\t\t * @chainable\n\t\t * @param  {String|Number} val The path part value to set\n\t\t * @returns {Object} The handler instance (for chaining)\n\t\t */\n\t\treturn function( val ) {\n\t\t\tthis.setPathPart( nodeLevel, val );\n\t\t\tif ( supportedMethods.length ) {\n\t\t\t\tthis._supportedMethods = supportedMethods;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t} else {\n\t\t/**\n\t\t * Set a non-dymanic (non-named-group) path part of a query URL, and\n\t\t * set the value of a subresource if an input value is provided and\n\t\t * exactly one named-group child node exists.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t *     // revisions() is a non-dynamic path part setter:\n\t\t *     wp.posts().id( 4 ).revisions();       // Get posts/4/revisions\n\t\t *     wp.posts().id( 4 ).revisions( 1372 ); // Get posts/4/revisions/1372\n\t\t *\n\t\t * @chainable\n\t\t * @param  {String|Number} [val] The path part value to set (if provided)\n\t\t *                               for a subresource within this resource\n\t\t * @returns {Object} The handler instance (for chaining)\n\t\t */\n\t\treturn function( val ) {\n\t\t\t// If the path part is not a namedGroup, it should have exactly one\n\t\t\t// entry in the names array: use that as the value for this setter,\n\t\t\t// as it will usually correspond to a collection endpoint.\n\t\t\tthis.setPathPart( nodeLevel, nodeName );\n\n\t\t\t// If this node has exactly one dynamic child, this method may act as\n\t\t\t// a setter for that child node. `dynamicChildLevel` will be falsy if the\n\t\t\t// node does not have a child or has multiple children.\n\t\t\tif ( val !== undefined && dynamicChildLevel ) {\n\t\t\t\tthis.setPathPart( dynamicChildLevel, val );\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t}\n}\n\nmodule.exports = {\n\tcreate: createPathPartSetter,\n};\n"]},"metadata":{},"sourceType":"script"}