{"ast":null,"code":"(function (name, definition, context) {\n  //try CommonJS, then AMD (require.js), then use global.\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();else if (typeof context['define'] == 'function' && context['define']['amd']) define(definition);else context[name] = definition();\n})('li', function () {\n  // compile regular expressions ahead of time for efficiency\n  var relsRegExp = /^;\\s*([^\"=]+)=(?:\"([^\"]+)\"|([^\";,]+)(?:[;,]|$))/;\n  var sourceRegExp = /^<([^>]*)>/;\n  var delimiterRegExp = /^\\s*,\\s*/;\n  return {\n    parse: function parse(linksHeader, options) {\n      var match;\n      var source;\n      var rels;\n      var extended = options && options.extended || false;\n      var links = [];\n\n      while (linksHeader) {\n        linksHeader = linksHeader.trim(); // Parse `<link>`\n\n        source = sourceRegExp.exec(linksHeader);\n        if (!source) break;\n        var current = {\n          link: source[1]\n        }; // Move cursor\n\n        linksHeader = linksHeader.slice(source[0].length); // Parse `; attr=relation` and `; attr=\"relation\"`\n\n        var nextDelimiter = linksHeader.match(delimiterRegExp);\n\n        while (linksHeader && (!nextDelimiter || nextDelimiter.index > 0)) {\n          match = relsRegExp.exec(linksHeader);\n          if (!match) break; // Move cursor\n\n          linksHeader = linksHeader.slice(match[0].length);\n          nextDelimiter = linksHeader.match(delimiterRegExp);\n\n          if (match[1] === 'rel' || match[1] === 'rev') {\n            // Add either quoted rel or unquoted rel\n            rels = (match[2] || match[3]).split(/\\s+/);\n            current[match[1]] = rels;\n          } else {\n            current[match[1]] = match[2] || match[3];\n          }\n        }\n\n        links.push(current); // Move cursor\n\n        linksHeader = linksHeader.replace(delimiterRegExp, '');\n      }\n\n      if (!extended) {\n        return links.reduce(function (result, currentLink) {\n          if (currentLink.rel) {\n            currentLink.rel.forEach(function (rel) {\n              result[rel] = currentLink.link;\n            });\n          }\n\n          return result;\n        }, {});\n      }\n\n      return links;\n    },\n    stringify: function stringify(params) {\n      var grouped = Object.keys(params).reduce(function (grouped, key) {\n        grouped[params[key]] = grouped[params[key]] || [];\n        grouped[params[key]].push(key);\n        return grouped;\n      }, {});\n      var entries = Object.keys(grouped).reduce(function (result, link) {\n        return result.concat('<' + link + '>; rel=\"' + grouped[link].join(' ') + '\"');\n      }, []);\n      return entries.join(', ');\n    }\n  };\n}, this);","map":{"version":3,"sources":["/Users/hiromi/ionic-react-wordpress/node_modules/li/lib/index.js"],"names":["name","definition","context","module","exports","define","relsRegExp","sourceRegExp","delimiterRegExp","parse","linksHeader","options","match","source","rels","extended","links","trim","exec","current","link","slice","length","nextDelimiter","index","split","push","replace","reduce","result","currentLink","rel","forEach","stringify","params","grouped","Object","keys","key","entries","concat","join"],"mappings":"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","sourcesContent":["(function (name, definition, context) {\n\n  //try CommonJS, then AMD (require.js), then use global.\n\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();\n  else if (typeof context['define'] == 'function' && context['define']['amd']) define(definition);\n  else context[name] = definition();\n\n})('li', function () {\n  // compile regular expressions ahead of time for efficiency\n  var relsRegExp = /^;\\s*([^\"=]+)=(?:\"([^\"]+)\"|([^\";,]+)(?:[;,]|$))/;\n  var sourceRegExp = /^<([^>]*)>/;\n  var delimiterRegExp = /^\\s*,\\s*/;\n\n  return {\n    parse: function (linksHeader, options) {\n      var match;\n      var source;\n      var rels;\n      var extended = options && options.extended || false;\n      var links = [];\n\n      while (linksHeader) {\n        linksHeader = linksHeader.trim();\n\n        // Parse `<link>`\n        source = sourceRegExp.exec(linksHeader);\n        if (!source) break;\n\n        var current = {\n          link: source[1]\n        };\n\n        // Move cursor\n        linksHeader = linksHeader.slice(source[0].length);\n\n        // Parse `; attr=relation` and `; attr=\"relation\"`\n\n        var nextDelimiter = linksHeader.match(delimiterRegExp);\n        while(linksHeader && (!nextDelimiter || nextDelimiter.index > 0)) {\n          match = relsRegExp.exec(linksHeader);\n          if (!match) break;\n\n          // Move cursor\n          linksHeader = linksHeader.slice(match[0].length);\n          nextDelimiter = linksHeader.match(delimiterRegExp);\n\n\n          if (match[1] === 'rel' || match[1] === 'rev') {\n            // Add either quoted rel or unquoted rel\n            rels = (match[2] || match[3]).split(/\\s+/);\n            current[match[1]] = rels;\n          } else {\n            current[match[1]] = match[2] || match[3];\n          }\n        }\n\n        links.push(current);\n        // Move cursor\n        linksHeader = linksHeader.replace(delimiterRegExp, '');\n      }\n\n      if (!extended) {\n        return links.reduce(function(result, currentLink) {\n          if (currentLink.rel) {\n            currentLink.rel.forEach(function(rel) {\n              result[rel] = currentLink.link;\n            });\n          }\n          return result;\n        }, {});\n      }\n\n      return links;\n    },\n    stringify: function (params) {\n      var grouped = Object.keys(params).reduce(function(grouped, key) {\n        grouped[params[key]] = grouped[params[key]] || [];\n        grouped[params[key]].push(key);\n        return grouped;\n      }, {});\n\n      var entries = Object.keys(grouped).reduce(function(result, link) {\n        return result.concat('<' + link + '>; rel=\"' + grouped[link].join(' ') + '\"');\n      }, []);\n\n      return entries.join(', ');\n    }\n  };\n\n}, this);\n"]},"metadata":{},"sourceType":"script"}